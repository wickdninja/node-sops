"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[337],{4701:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"security-best-practices","title":"Security Best Practices","description":"When working with secrets and sensitive data, it\'s critical to follow security best practices. This guide provides recommendations for using Node SOPS securely in your projects.","source":"@site/src/docs/security-best-practices.md","sourceDirName":".","slug":"/security-best-practices","permalink":"/node-sops/security-best-practices","draft":false,"unlisted":false,"editUrl":"https://github.com/wickdninja/node-sops/edit/main/docs-src/src/docs/src/docs/security-best-practices.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Security Best Practices"},"sidebar":"tutorialSidebar","previous":{"title":"Programmatic Usage","permalink":"/node-sops/programmatic-usage"},"next":{"title":"CLI Reference","permalink":"/node-sops/api/cli"}}');var r=i(4848),t=i(8453);const o={sidebar_position:5,title:"Security Best Practices"},c="Security Best Practices",l={},d=[{value:"Key Management",id:"key-management",level:2},{value:"Protecting the Encryption Key",id:"protecting-the-encryption-key",level:3},{value:"Secure Key Sharing",id:"secure-key-sharing",level:3},{value:"File Handling",id:"file-handling",level:2},{value:"Encrypted Files",id:"encrypted-files",level:3},{value:"Temporary Decrypted Files",id:"temporary-decrypted-files",level:3},{value:"Application Security",id:"application-security",level:2},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Example: Loading Secrets Securely",id:"example-loading-secrets-securely",level:3},{value:"CI/CD Integration",id:"cicd-integration",level:2},{value:"Example: GitHub Actions Integration",id:"example-github-actions-integration",level:3},{value:"Team Workflows",id:"team-workflows",level:2},{value:"Onboarding New Team Members",id:"onboarding-new-team-members",level:3},{value:"Handling Key Rotation",id:"handling-key-rotation",level:3},{value:"Production Deployments",id:"production-deployments",level:2},{value:"Additional Security Measures",id:"additional-security-measures",level:2},{value:"File Permissions",id:"file-permissions",level:3},{value:"Key Backups",id:"key-backups",level:3},{value:"Security Audits",id:"security-audits",level:3},{value:"Conclusion",id:"conclusion",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"security-best-practices",children:"Security Best Practices"})}),"\n",(0,r.jsx)(n.p,{children:"When working with secrets and sensitive data, it's critical to follow security best practices. This guide provides recommendations for using Node SOPS securely in your projects."}),"\n",(0,r.jsx)(n.h2,{id:"key-management",children:"Key Management"}),"\n",(0,r.jsx)(n.h3,{id:"protecting-the-encryption-key",children:"Protecting the Encryption Key"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:".sops-key"})," file is the most critical security component in your Node SOPS setup. Anyone with access to this file can decrypt your secrets."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Do:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Add ",(0,r.jsx)(n.code,{children:".sops-key"})," to your ",(0,r.jsx)(n.code,{children:".gitignore"})," file immediately after generating it"]}),"\n",(0,r.jsx)(n.li,{children:"Store the key securely outside your repository"}),"\n",(0,r.jsx)(n.li,{children:"Use different keys for different environments (development, staging, production)"}),"\n",(0,r.jsx)(n.li,{children:"Rotate keys periodically for enhanced security"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Don't:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Commit the key file to version control"}),"\n",(0,r.jsx)(n.li,{children:"Share the key through insecure channels (like email or chat)"}),"\n",(0,r.jsx)(n.li,{children:"Use the same key across multiple projects"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"secure-key-sharing",children:"Secure Key Sharing"}),"\n",(0,r.jsx)(n.p,{children:"To share the encryption key with team members:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Use a secure password manager like 1Password, LastPass, or Bitwarden"}),"\n",(0,r.jsx)(n.li,{children:"Use end-to-end encrypted communication channels"}),"\n",(0,r.jsx)(n.li,{children:"Consider using a secrets management service for enterprise environments"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"file-handling",children:"File Handling"}),"\n",(0,r.jsx)(n.h3,{id:"encrypted-files",children:"Encrypted Files"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Do:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Commit encrypted files to version control"}),"\n",(0,r.jsxs)(n.li,{children:["Use descriptive file names that indicate they contain encrypted content (e.g., ",(0,r.jsx)(n.code,{children:"secrets.enc.json"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Keep encrypted files organized in a consistent location in your project"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Don't:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Store unencrypted secrets files in the repository"}),"\n",(0,r.jsx)(n.li,{children:"Log or display decrypted content in your application logs"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"temporary-decrypted-files",children:"Temporary Decrypted Files"}),"\n",(0,r.jsx)(n.p,{children:"If you need to temporarily decrypt files during development:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Do:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Add decrypted files to ",(0,r.jsx)(n.code,{children:".gitignore"})]}),"\n",(0,r.jsx)(n.li,{children:"Delete decrypted files when you're done with them"}),"\n",(0,r.jsxs)(n.li,{children:["Use the ",(0,r.jsx)(n.code,{children:"view"})," or ",(0,r.jsx)(n.code,{children:"get"})," commands instead of full decryption when possible"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Don't:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Leave decrypted files on disk longer than necessary"}),"\n",(0,r.jsx)(n.li,{children:"Share decrypted files outside secure channels"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"application-security",children:"Application Security"}),"\n",(0,r.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,r.jsx)(n.p,{children:"When using secrets in your application:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Do:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Load secrets from encrypted files at application startup"}),"\n",(0,r.jsx)(n.li,{children:"Use environment variables as an interface to your secrets"}),"\n",(0,r.jsx)(n.li,{children:"Clear sensitive data from memory when no longer needed"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Don't:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Hard-code secrets in your application code"}),"\n",(0,r.jsx)(n.li,{children:"Include secrets in client-side code"}),"\n",(0,r.jsx)(n.li,{children:"Log environment variables that contain secrets"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-loading-secrets-securely",children:"Example: Loading Secrets Securely"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { Sops } = require('node-sops');\n\n// Load secrets early in your application bootstrap\nfunction loadSecrets() {\n  try {\n    const sops = new Sops();\n    const secrets = sops.view('secrets.enc.json');\n    \n    // Add secrets to process.env\n    Object.entries(secrets.data).forEach(([key, value]) => {\n      if (typeof value === 'string') {\n        process.env[key.toUpperCase()] = value;\n      } else if (typeof value === 'object') {\n        Object.entries(value).forEach(([subKey, subValue]) => {\n          if (typeof subValue === 'string') {\n            process.env[`${key.toUpperCase()}_${subKey.toUpperCase()}`] = subValue;\n          }\n        });\n      }\n    });\n    \n    // The decrypted content is no longer accessible outside this function\n    // due to JavaScript's garbage collection\n  } catch (error) {\n    console.error('Failed to load secrets:', error.message);\n    process.exit(1); // Exit if secrets cannot be loaded\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"cicd-integration",children:"CI/CD Integration"}),"\n",(0,r.jsx)(n.p,{children:"When using Node SOPS in continuous integration and deployment pipelines:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Do:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Store the encryption key in your CI/CD system's secure environment variables or secrets storage"}),"\n",(0,r.jsx)(n.li,{children:"Decrypt secrets only during the build/deploy process, not in artifacts"}),"\n",(0,r.jsx)(n.li,{children:"Use different keys for different deployment environments"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Don't:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Store the key in your repository or build scripts"}),"\n",(0,r.jsx)(n.li,{children:"Output decrypted secrets in build logs"}),"\n",(0,r.jsx)(n.li,{children:"Use the same key across multiple environments"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-github-actions-integration",children:"Example: GitHub Actions Integration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"name: Deploy\n\non:\n  push:\n    branches: [ main ]\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    \n    steps:\n    - uses: actions/checkout@v2\n    \n    - name: Setup Node.js\n      uses: actions/setup-node@v2\n      with:\n        node-version: '14'\n        \n    - name: Install dependencies\n      run: npm ci\n      \n    - name: Create key file\n      run: echo \"$SOPS_KEY\" > .sops-key\n      env:\n        SOPS_KEY: ${{ secrets.SOPS_KEY }}\n      \n    - name: Build with secrets\n      run: |\n        # Use the secrets during build\n        npx node-sops view -i secrets.enc.json -f json > .env.json\n        npm run build\n        \n    - name: Clean up\n      run: rm -f .sops-key .env.json\n"})}),"\n",(0,r.jsx)(n.h2,{id:"team-workflows",children:"Team Workflows"}),"\n",(0,r.jsx)(n.h3,{id:"onboarding-new-team-members",children:"Onboarding New Team Members"}),"\n",(0,r.jsx)(n.p,{children:"When onboarding new team members:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Share the encryption key securely"}),"\n",(0,r.jsx)(n.li,{children:"Provide clear documentation on how to use Node SOPS in your project"}),"\n",(0,r.jsx)(n.li,{children:"Establish clear guidelines for creating and modifying secrets"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"handling-key-rotation",children:"Handling Key Rotation"}),"\n",(0,r.jsx)(n.p,{children:"Periodically rotating encryption keys enhances security:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Generate a new encryption key"}),"\n",(0,r.jsx)(n.li,{children:"Decrypt all secret files using the old key"}),"\n",(0,r.jsx)(n.li,{children:"Re-encrypt them with the new key"}),"\n",(0,r.jsx)(n.li,{children:"Securely distribute the new key to all team members"}),"\n",(0,r.jsx)(n.li,{children:"Securely destroy the old key"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"production-deployments",children:"Production Deployments"}),"\n",(0,r.jsx)(n.p,{children:"For production deployments, consider these additional recommendations:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Do:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use a dedicated key for production environments"}),"\n",(0,r.jsx)(n.li,{children:"Consider using a more robust secrets management solution for production (like AWS Secrets Manager, HashiCorp Vault, etc.)"}),"\n",(0,r.jsx)(n.li,{children:"Limit access to production keys to essential personnel only"}),"\n",(0,r.jsx)(n.li,{children:"Audit and log access to production secrets"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Don't:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use development keys in production"}),"\n",(0,r.jsx)(n.li,{children:"Store production keys on developer machines"}),"\n",(0,r.jsx)(n.li,{children:"Automate production key distribution without proper security controls"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"additional-security-measures",children:"Additional Security Measures"}),"\n",(0,r.jsx)(n.h3,{id:"file-permissions",children:"File Permissions"}),"\n",(0,r.jsx)(n.p,{children:"Set appropriate file permissions on your encryption key file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# On Unix-based systems (Linux, macOS)\nchmod 600 .sops-key\n"})}),"\n",(0,r.jsx)(n.p,{children:"This makes the file readable and writable only by the owner."}),"\n",(0,r.jsx)(n.h3,{id:"key-backups",children:"Key Backups"}),"\n",(0,r.jsx)(n.p,{children:"Ensure you have a secure backup of your encryption keys. Losing the key means losing access to all encrypted data."}),"\n",(0,r.jsx)(n.h3,{id:"security-audits",children:"Security Audits"}),"\n",(0,r.jsx)(n.p,{children:"Regularly audit your security practices and ensure all team members are following established guidelines."}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsx)(n.p,{children:"Security is a continuous process, not a one-time setup. Regularly review and update your security practices as your project evolves and as new security challenges emerge."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var s=i(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);