"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[772],{3671:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"programmatic-usage","title":"Programmatic Usage","description":"Node SOPS provides a clean and intuitive API for integrating secret management directly into your Node.js applications. This guide covers the complete programmatic interface for both JavaScript and TypeScript users.","source":"@site/src/docs/programmatic-usage.md","sourceDirName":".","slug":"/programmatic-usage","permalink":"/node-sops/programmatic-usage","draft":false,"unlisted":false,"editUrl":"https://github.com/wickdninja/node-sops/edit/main/docs-src/src/docs/src/docs/programmatic-usage.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Programmatic Usage"},"sidebar":"tutorialSidebar","previous":{"title":"CLI Usage","permalink":"/node-sops/cli-usage"},"next":{"title":"Security Best Practices","permalink":"/node-sops/security-best-practices"}}');var r=t(4848),i=t(8453);const c={sidebar_position:4,title:"Programmatic Usage"},o="Programmatic API",a={},d=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"JavaScript",id:"javascript",level:3},{value:"TypeScript",id:"typescript",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Methods",id:"methods",level:3},{value:"initialize",id:"initialize",level:4},{value:"encrypt",id:"encrypt",level:4},{value:"decrypt",id:"decrypt",level:4},{value:"view",id:"view",level:4},{value:"get",id:"get",level:4},{value:"rotate",id:"rotate",level:4},{value:"encryptContent",id:"encryptcontent",level:4},{value:"decryptContent",id:"decryptcontent",level:4},{value:"Environment Variable Integration",id:"environment-variable-integration",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"TypeScript Type Definitions",id:"typescript-type-definitions",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"programmatic-api",children:"Programmatic API"})}),"\n",(0,r.jsx)(n.p,{children:"Node SOPS provides a clean and intuitive API for integrating secret management directly into your Node.js applications. This guide covers the complete programmatic interface for both JavaScript and TypeScript users."}),"\n",(0,r.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsx)(n.h3,{id:"javascript",children:"JavaScript"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { Sops } = require('node-sops');\n\n// Create a new Sops instance\nconst sops = new Sops();\n\n// Encrypt a file\nsops.encrypt('secrets.yaml', 'secrets.enc.json');\n\n// Decrypt a file\nsops.decrypt('secrets.enc.json', 'secrets.yaml');\n\n// View decrypted content\nconst secrets = sops.view('secrets.enc.json');\nconsole.log(secrets);\n\n// Get a specific value\nconst apiKey = sops.get('secrets.enc.json', 'data.api.key');\nconsole.log(apiKey);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"typescript",children:"TypeScript"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"import { Sops } from 'node-sops';\n\n// Create a new Sops instance\nconst sops = new Sops();\n\n// Encrypt a file\nsops.encrypt('secrets.yaml', 'secrets.enc.json');\n\n// Decrypt a file\nsops.decrypt('secrets.enc.json', 'secrets.yaml');\n\n// View decrypted content with type safety\ninterface Secrets {\n  data: {\n    api: {\n      key: string;\n      secret: string;\n    };\n    database: {\n      username: string;\n      password: string;\n    };\n  };\n}\n\nconst secrets = sops.view<Secrets>('secrets.enc.json');\nconsole.log(secrets.data.api.key); // TypeScript knows this is a string\n\n// Get a specific value\nconst apiKey = sops.get('secrets.enc.json', 'data.api.key');\nconsole.log(apiKey);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,r.jsx)(n.h3,{id:"constructor",children:"Constructor"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"new Sops(options?: SopsOptions)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Option"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"keyPath"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsxs)(n.td,{children:["Path to the encryption key file (default: ",(0,r.jsx)(n.code,{children:".sops-key"}),")"]})]})})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const sops = new Sops({\n  keyPath: './config/.custom-key'\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(n.h4,{id:"initialize",children:"initialize"}),"\n",(0,r.jsx)(n.p,{children:"Initializes a new encryption key."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"initialize(options?: InitOptions): string\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Option"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"force"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsxs)(n.td,{children:["Overwrite existing key file if it exists (default: ",(0,r.jsx)(n.code,{children:"false"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"keyPath"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Override the instance keyPath for this operation"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The generated encryption key as a string."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"try {\n  const key = sops.initialize();\n  console.log('Created new key:', key);\n} catch (error) {\n  console.log('Key already exists');\n}\n\n// Force overwrite existing key\nconst newKey = sops.initialize({ force: true });\n"})}),"\n",(0,r.jsx)(n.h4,{id:"encrypt",children:"encrypt"}),"\n",(0,r.jsx)(n.p,{children:"Encrypts a plaintext file containing secrets."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"encrypt(inputPath: string, outputPath: string, options?: OperationOptions): void\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Option"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"keyPath"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Override the instance keyPath for this operation"})]})})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Encrypt a YAML file\nsops.encrypt('secrets.yaml', 'secrets.enc.json');\n\n// Use a custom key file for this operation\nsops.encrypt('secrets.yaml', 'secrets.enc.json', {\n  keyPath: './special-key'\n});\n"})}),"\n",(0,r.jsx)(n.h4,{id:"decrypt",children:"decrypt"}),"\n",(0,r.jsx)(n.p,{children:"Decrypts an encrypted file."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"decrypt(inputPath: string, outputPath: string, options?: DecryptOptions): void\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Option"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"keyPath"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Override the instance keyPath for this operation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"format"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"'yaml'"})," | ",(0,r.jsx)(n.code,{children:"'json'"})]}),(0,r.jsx)(n.td,{children:"Force output format (default: inferred from output file extension)"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Decrypt to a YAML file\nsops.decrypt('secrets.enc.json', 'secrets.yaml');\n\n// Explicitly specify the output format\nsops.decrypt('secrets.enc.json', 'secrets.txt', {\n  format: 'yaml'\n});\n"})}),"\n",(0,r.jsx)(n.h4,{id:"view",children:"view"}),"\n",(0,r.jsx)(n.p,{children:"Reads and decrypts an encrypted file, returning the contents as an object."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"view<T = any>(inputPath: string, options?: OperationOptions): T\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Option"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"keyPath"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Override the instance keyPath for this operation"})]})})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The decrypted content as an object."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// View the decrypted content\nconst secrets = sops.view('secrets.enc.json');\nconsole.log(secrets.data.api.key);\n\n// With TypeScript type safety\ninterface Config {\n  data: {\n    api: { key: string }\n  }\n}\nconst config = sops.view<Config>('secrets.enc.json');\n"})}),"\n",(0,r.jsx)(n.h4,{id:"get",children:"get"}),"\n",(0,r.jsx)(n.p,{children:"Retrieves a specific value from an encrypted file using a dot-notation path."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"get(inputPath: string, dotPath: string, options?: OperationOptions): any\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Option"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"keyPath"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Override the instance keyPath for this operation"})]})})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The specific value at the requested path."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Get a specific value\nconst apiKey = sops.get('secrets.enc.json', 'data.api.key');\nconsole.log(apiKey);\n\n// Get a nested value\nconst dbPassword = sops.get('secrets.enc.json', 'data.database.password');\n"})}),"\n",(0,r.jsx)(n.h4,{id:"rotate",children:"rotate"}),"\n",(0,r.jsx)(n.p,{children:"Re-encrypts an encrypted file with a new initialization vector."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"rotate(inputPath: string, outputPath?: string, options?: OperationOptions): void\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Option"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"keyPath"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Override the instance keyPath for this operation"})]})})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// Rotate encryption in place\nsops.rotate('secrets.enc.json');\n\n// Rotate to a new file\nsops.rotate('secrets.enc.json', 'new-secrets.enc.json');\n"})}),"\n",(0,r.jsx)(n.h4,{id:"encryptcontent",children:"encryptContent"}),"\n",(0,r.jsx)(n.p,{children:"Encrypts a JavaScript object directly without reading from or writing to files."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"encryptContent(content: any, options?: OperationOptions): EncryptedContent\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Option"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"keyPath"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Override the instance keyPath for this operation"})]})})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," An object containing the encrypted content and metadata."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const plainContent = {\n  api: {\n    key: 'secret_value'\n  }\n};\nconst encrypted = sops.encryptContent(plainContent);\nconsole.log(encrypted);\n// { iv: '...', content: '...', metadata: { ... } }\n"})}),"\n",(0,r.jsx)(n.h4,{id:"decryptcontent",children:"decryptContent"}),"\n",(0,r.jsx)(n.p,{children:"Decrypts an encrypted content object directly without reading from or writing to files."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"decryptContent<T = any>(content: EncryptedContent, options?: OperationOptions): T\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Options:"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Option"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"keyPath"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:"Override the instance keyPath for this operation"})]})})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns:"})," The decrypted content as an object."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const encrypted = sops.encryptContent(plainContent);\nconst decrypted = sops.decryptContent(encrypted);\nconsole.log(decrypted);\n// { api: { key: 'secret_value' } }\n"})}),"\n",(0,r.jsx)(n.h2,{id:"environment-variable-integration",children:"Environment Variable Integration"}),"\n",(0,r.jsx)(n.p,{children:"A common pattern is to load secrets from an encrypted file and inject them into environment variables:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const { Sops } = require('node-sops');\n\nfunction loadSecrets() {\n  const sops = new Sops();\n  const secrets = sops.view('secrets.enc.json');\n  \n  // Add secrets to process.env\n  Object.entries(secrets.data).forEach(([key, value]) => {\n    if (typeof value === 'string') {\n      process.env[key.toUpperCase()] = value;\n    } else {\n      Object.entries(value).forEach(([subKey, subValue]) => {\n        if (typeof subValue === 'string') {\n          process.env[`${key.toUpperCase()}_${subKey.toUpperCase()}`] = subValue;\n        }\n      });\n    }\n  });\n}\n\n// Call early in your application bootstrap\nloadSecrets();\n"})}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.p,{children:"Node SOPS throws descriptive error objects when operations fail. It's a good practice to use try/catch blocks when calling API methods:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"try {\n  const secrets = sops.view('secrets.enc.json');\n  // Use secrets...\n} catch (error) {\n  console.error('Failed to decrypt secrets:', error.message);\n  // Handle the error appropriately\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"typescript-type-definitions",children:"TypeScript Type Definitions"}),"\n",(0,r.jsx)(n.p,{children:"Node SOPS includes comprehensive TypeScript definitions. The main interfaces are:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"interface SopsOptions {\n  keyPath?: string;\n}\n\ninterface InitOptions {\n  force?: boolean;\n  keyPath?: string;\n}\n\ninterface OperationOptions {\n  keyPath?: string;\n}\n\ninterface DecryptOptions extends OperationOptions {\n  format?: 'yaml' | 'json';\n}\n\ninterface EncryptedContent {\n  iv: string;\n  content: string;\n  metadata: {\n    encryptedAt: string;\n    version: string;\n  };\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var s=t(6540);const r={},i=s.createContext(r);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);